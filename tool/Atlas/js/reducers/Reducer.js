// Generated by CoffeeScript 1.10.0
(function() {
  var initialState,
    slice = [].slice;

  initialState = {
    Nodes: [],
    Connecting: false,
    Connections: [],
    SelectedNode: -1,
    SelectedField: ''
  };

  define(['redux'], function() {
    var Connecting, Nodes, Selected, combineReducers;
    combineReducers = require('redux').combineReducers;
    Nodes = function(state, action) {
      if (state == null) {
        state = [];
      }
      switch (action.type) {
        case 'ADD_NODE':
          return slice.call(state).concat([{
              nodeType: action.nodeType,
              id: action.id,
              initPos: action.pos
            }]);
      }
      return state;
    };
    Connecting = function(state, action) {
      if (state == null) {
        state = false;
      }
      switch (action.type) {
        case 'SELECT':
          return true;
      }
      return state;
    };
    Selected = function(state, action) {
      if (state == null) {
        state = {
          Node: -1,
          Field: ''
        };
      }
      switch (action.type) {
        case 'SELECT':
          return {
            Node: action.node,
            Field: action.field
          };
      }
      return state;
    };
    return combineReducers({
      Nodes: Nodes,
      Connecting: Connecting,
      Selected: Selected
    });
  });

}).call(this);

//# sourceMappingURL=Reducer.map
