// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(["react", "Field"], function(React, Field) {
    var Input, connect;
    connect = require('reactredux').connect;
    Input = (function(superClass) {
      extend(Input, superClass);

      Input.prototype.el = '';

      function Input(props) {
        this.componentWillUpdate = bind(this.componentWillUpdate, this);
        Input.__super__.constructor.call(this, props);
      }

      Input.prototype.componentWillUpdate = function(props, state) {};

      Input.prototype.render = function() {
        var field, i;
        i = 0;
        return React.createElement("div", {
          "className": "Input"
        }, React.createElement("br", null), (function() {
          var results;
          results = [];
          for (field in this.props.input) {
            results.push(React.createElement(Field, {
              "key": i++,
              "field": field,
              "type": "Input",
              "node": this.props.node
            }));
          }
          return results;
        }).call(this));
      };

      return Input;

    })(React.Component);
    return Input = connect()(Input);
  });

}).call(this);

//# sourceMappingURL=Input.map
